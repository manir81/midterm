Please answer the below core-java Questions:

What is programing language?
A.A programming language is a vocabulary and set of grammatical rules for instructing
a computer or computing device to perform specific tasks.
programming language usually refers to high-level languages such as C, C++, COBOL, Java, FORTRAN, Ada, and Pascal.



What jdk contains or composed of and define each components?
A.The Java Development Kit (JDK) is a software development environment used for developing Java applications and
applets. It includes the Java Runtime Environment (JRE), an interpreter/loader (java), a compiler (javac), an archiver
(jar), a documentation generator (javadoc) and other tools needed in Java development.
Following is a list of the main components of the JDK:
1.The Runtime Interpreter.
2.The Compiler.
3.The Applet Viewer.
4.The Debugger.
5.The Class File Disassembler.
6.The Header and Stub File Generator.
7.The Documentation Generator.
8.Applet Demos.

What is IDE?
A.IDE (for Integrated Development Environment) is a software application which enables users to more easily
write and debug Java programs.

What are the IDEs available in the market to support java?
Ans.
1.NetBeans. NetBeans is an open source Integrated Development Environment written in Java. ...
2.Eclipse. Eclipse is another free Java IDE for developers and programmers. ...
3.IntelliJ IDEA Community Edition. ...
4.Android Studio. ...
5.Enide Studio 2014. ...
6.BlueJ. ...
7.jEdit. ...
8.jGRASP.

Explain the entire java life cycle.
A.Life cycle of a java program tells us what happens right from the point when we type source code in a text editor
to the point that source code is converted into machine code (0's and 1's). There are three main stages in the
life cycle of a java program.Java source code is compiled into bytecode when we use the javac compiler. The bytecode
gets saved on the disk with the file extension .class . When the program is to be run, the bytecode is converted,
using the just-in-time (JIT) compiler. The result is machine code which is then fed to the memory and is executed.

what is class?

A. A class can be defined as a blueprint that describes the behavior/state that the object of its type support.

What is object?
A. An object is a member or an "instance" of a class. An object has a state in which all of its properties have
values that you either explicitly define or that are defined by default settings.

What is the entry point of an application?
A.An application entry point identifies a resource that is an access point to an application. Application entry
points are used to control users' access to different versions of an application that is deployed on a platform.

Why main is static?
A.Java program's main method has to be declared static because keyword static allows main to be called without
creating an object of the class in which the main method is defined. If we omit static keyword before main Java
program will successfully compile but it won't execute.

Which class is the superclass of all classes?
A.java.lang.Object is a super class of any class by default. The root class of the Java class hierarchy.
 All non-primitive types (including arrays) inherit either directly or indirectly from this class. Object is
 the super class of all other classes you use, including the ones you implemented.

What is difference between path and classpath variables?
A.Once you installed Java on your machine, it is required to Set the PATH environment variable to conveniently run
the executable (javac.exe, java.exe, javadoc.exe, and so on) from any directory without having to type the full path
of the command, such as:C:\javac TestClass.java.
Otherhand; Classpath is system environment variable used by the Java compiler and JVM.
Java compiler and JVM is used Classpath to determine the location of required class files.
C:\Program Files\Java\jdk1.6.0\bin.
path variable is used to set the path for all Java software tools like javac.exe, java.exe, javadoc.exe, and so on.
Otherhand;classpath variable is used to set the path for java classes.

What is the difference between an Interface and Abstract class?
A.1.Main difference is methods of a Java interface are implicitly abstract and cannot have implementations. A Java
abstract class can have instance methods that implements a default behavior. 2.Variables declared in a Java interface
is by default final. An abstract class may contain non-final variables.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A.Not.To create object of an abstract class just use "new" just like creating objects of other
 non abstract classes with just one small difference, as follows:

      package com.my.test;

      public abstract class MyAbstractClass {
          private String name;

          public MyAbstractClass(String name)
          {
              this.name = name;
          }

          public String getName(){
              return this.name;
          }


      }

      package com.my.test;

      public class MyTestClass {

          public static void main(String [] args)
          {
              MyAbstractClass ABC = new MyAbstractClass("name") {
              };

              System.out.println(ABC.getName());
          }

      }
      In the same way You can create an object of interface type, just as follows:

      package com.my.test;

      public interface MyInterface {

          void doSome();
          public abstract void go();

      }

      package com.my.test;

      public class MyTestClass {

          public static void main(String [] args)
          {

              MyInterface myInterface = new MyInterface() {

                  @Override
                  public void go() {
                      System.out.println("Go ...");

                  }

                  @Override
                  public void doSome() {
                      System.out.println("Do ...");

                  }
              };

              myInterface.doSome();
              myInterface.go();
          }

what is Access Specifier?
a.Access Specifiers (also known as Visibility Specifiers ) regulate access to classes,
fields and methods in Java.These Specifiers determine whether a field or method in a class,
can be used or invoked by another method in another class or sub-class. Access Specifiers can
be used to restrict access.

What is OOP ? Define each feature of java OOP.
A.Object-oriented programming (OOP) refers to a type of computer programming (software design)
 in which programmers define not only the data type of a data structure, but also the types of
 operations (functions) that can be applied to the data structure.
 There are four major features in object-oriented programming: encapsulation, inheritance and
  polymorphism and Abstraction. Encapsulation refers to the creation of self-contained modules
 that bind processing functions to the data. These user-defined data types are called "classes,"
  and one instance of a class is an "object."

What is Java Package and which package is imported by default?
A.A package is a namespace that organizes a set of related classes and interfaces.
If you omit the package statement while writing the class definition, the class name is placed
into the default package, which has no name. Java compiler automatically imports this package.
Second, the java.lang package is imported implicitly.

What is API? Name list of API that you have used so far.
A.An application program interface (API) is a set of routines, protocols, and tools for building
 software applications. Basically, an API specifies how software components should interact.
  Additionally, APIs are used when programming graphical user interface (GUI) components.
  There are further types of Web APIs such as Simple Object Access Protocol (SOAP), Remote
  Procedure Call (RPC), and perhaps the most popular—at least in name— Representational State
   Transfer (REST).

Does java support multiple inheritance, explain why or why not?
A.To avoid ambiguity error java does not support multiple inheritance through class. But through
 the interface, multiple inheritance is possible in java. No java doesn't support multiple
 inheritance directly because it leads to overiding of methods when both extended class have a
 same method name.

What is method overloading and when it happens?
A major topic in OOP is overloading methods, which lets you define the same method multiple
 times so that you can call them with different argument lists (a method's argument list is
  called its signature).Overloading occurs when two or more methods in one class have the same
   method name but different parameters. Overriding means having two methods with the same
   method name and parameters (i.e., method signature).

Explain exceptions in java and how to handle it.
A.The Exception Handling in Java is one of the powerful mechanism to handle the runtime errors
 so that normal flow of the application can be maintained.

 package exeption;

 public class ExceptionHanding {

 	public static void main(String[] args) {
 		// TODO Auto-generated method stub
 		int num1;
 		num1 =10;
 		try {
 			int result = 10/0;
 		System.out.println(result);
 		}catch(Exception ex){
 			ex.printStackTrace();
 		System.out.println(" you are not able to print  ");
 		}
 		System.out.println("we are here means something worng");
 	}

 }

What is static keyword in java? How it has been used in variables and methods ?
A.The static keyword in Java is used for memory management mainly. We can apply java static
keyword with variables, methods, blocks and nested class. The static keyword belongs to the
class than an instance of the class. ... Variable (also known as a class variable) Method
(also known as a class method).

What is final and how it has been used variables and methods?

What is final, finally and finalize?
Ans. Final is used to apply restrictions on class, method and variable. Final class can't be
inherited, final method can't be overridden and final variable value can't be changed.
Finally is used to place important code, it will be executed whether exception is handled or not.
Finalize is used to perform clean up processing just before object is garbage collected.
Final is a keyword. Finally is a block.Finalize is a method.

What is a constructor ?
A.A constructor in Java is a block of code similar to a method that's called when an instance of
an object is created. Here are the key differences between a constructor and a method:
A constructor doesn't have a return type. ... Unlike methods, constructors are not considered
members of a class.

Can we have multiple constructors in a class?
A.A class can have multiple constructors, as long as their signature (the parameters they take)
are not the same. We can define as many constructors as you need. When a Java class contains
multiple constructors, we say that the constructor is overloaded (comes in multiple versions).

If we don't have a constructor declared, what is called during the object creation?

What is "this" keyword in java ?
A.Keyword THIS is a reference variable in Java that refers to the current object. ...
It can be used to refer instance variable of current class. It can be used to invoke or initiate
current class constructor. It can be passed as an argument in the method call.

What is "super" keyword in java? How many possible way can you use?
a.The super keyword in java is a reference variable that is used to refer parent class objects.
The keyword “super” came into the picture with the concept of Inheritance.
It is majorly used in the following contexts:
1. Use of super with variables.
2. Use of super with methods.
3..Use of super with constructors:

What is JVM stand for ?
A. Java virtual machine (JVM) is a virtual machine that enables a computer to run Java programs
as well as programs written in other languages that are also compiled to Java bytecode. The JVM
is detailed by a specification that formally describes what is required of a JVM implementation.

Is JVM platform independent?
A.The JVM is not platform independent.

What version of java are you using?
A.java -version
  java version "1.8.0_201"

What is JAR stand for ?
A.A JAR (Java ARchive) is a package file format typically used to aggregate many Java class files
and associated metadata and resources (text, images, etc.) into one file for distribution.

What is the difference between JDK and JVM?
A.JVM is Java Virtual Machine, the JVM actually runs Java bytecode. JDK is Java Developer Kit,
the JDK is what we need to compile Java source code. JRE is Java Runtime Environment, is what
we need to run a Java program and contains a JVM, among other things. JVM (Java Virtual Machine)
is an abstract machine.

What is the difference between JVM and JRE?
A.The JRE is the environment within which the virtual machine runs. JRE is the container,
JVM is the content. Java Runtime Environment contains JVM, class libraries, and other supporting
files. It does not contain any development tools such as compiler, debugger, etc.

What is compile time and run time?
Answer: Runtime and compile time are programming terms that refer to different stages of
software program development. ... This compilation process is referred to as compile time.
 A compiled program can be opened and run by a user. When an application is running, it is
 called runtime.

What is heap?
A.The Java virtual machine has a heap that is shared among all Java virtual machine threads.
 The heap is the runtime data area from which memory for all class instances and arrays is
allocated.

How java manage it's memory?

What is the difference between String, StringBuffer and StringBuilder?

What is Singleton class?

What is Serialization and Deserialization?

when to use transient variable in java?

Difference between while and do..while loop?

What is Enum?

What is Iterator?

Which one will take more memory, an int or Integer?

Why is String Immutable in Java?

What is constructor chaining in Java?

The difference between Serial and Parallel Garbage Collector?

What is JIT stands for?

Explain Java Heap space and Garbage collection?

Can you guarantee the garbage collection process?

What is the difference between stack and heap in Java?

What is reflection in java and why is it useful?

what is multithreading in java?

What is the use of synchronization in Java?

What is Framework?


What are the testing Framework available in java?

Difference between jUnit and testNG?

What are the dependencies for this project?

what is dependency injection in java?

What is static binding and dynamic binding?











